import re

def assess_password_strength(password):
    """
    Assesses the strength of a password based on various criteria.
    
    Parameters:
    password (str): The password to be assessed.
    
    Returns:
    str: Feedback on the password's strength.
    """
    # Criteria weights
    length_criteria = len(password) >= 8
    uppercase_criteria = bool(re.search(r'[A-Z]', password))
    lowercase_criteria = bool(re.search(r'[a-z]', password))
    number_criteria = bool(re.search(r'\d', password))
    special_char_criteria = bool(re.search(r'[\W_]', password))
    
    # Calculate the score
    score = sum([
        length_criteria,
        uppercase_criteria,
        lowercase_criteria,
        number_criteria,
        special_char_criteria
    ])
    
    # Provide feedback based on the score
    if score == 5:
        return "Password is very strong."
    elif score == 4:
        return "Password is strong."
    elif score == 3:
        return "Password is medium. Consider adding more characters, numbers, and special symbols."
    elif score == 2:
        return "Password is weak. Consider adding more characters, including uppercase letters, numbers, and special symbols."
    else:
        return "Password is very weak. Consider making it longer and including uppercase letters, numbers, and special symbols."

def main():
    while True:
        choice = input("Do you want to (c)heck password strength or (q)uit? ").lower()
        if choice == 'q':
            break
        elif choice == 'c':
            password = input("Enter the password: ")
            feedback = assess_password_strength(password)
            print(f"Password strength: {feedback}")
        else:
            print("Invalid choice. Please enter 'c' to check password strength or 'q' to quit.")

if __name__ == "__main__":
    main()
